---
- name: Decommission GCP Resources
  hosts: gcp_vpc
  connection: local
  force_handlers: True
  environment:
    GCP_SERVICE_ACCOUNT_FILE: "{{ service_account_file }}"
    GCP_AUTH_KIND: 'serviceaccount'
  vars_files:
    - gcp_account_info.yml
  tasks:
    - name: Read the Vault Encrypted JSON file
      copy:
        content: "{{ lookup('file', 'credentials.json') }}"
        dest: "{{ service_account_file }}"
      notify: Clean tmp Decrypted Files
      tags: always

    - name: Get VPC Facts
      gcp_compute_network_facts:
        project: "{{ project }}"
      register: gcp_vpc
    
    - name: Delete Instance {{ node.name }}
      gcp_compute_instance:
        name: "{{ node.name | regex_replace('_','-') }}"
        zone: "{{ node.zone }}"
        project: "{{ project }}"
        state: absent
      loop: "{{ compute_nodes }}"
      loop_control:
        loop_var: node
    - name: Delete disks for {{ node.name }}
      gcp_compute_disk:
        name: "{{ node.name | regex_replace('_','-') }}-disk"
        zone: "{{ node.zone }}"
        project: "{{ project }}"
        state: absent
      loop: "{{ compute_nodes }}"
      loop_control:
        loop_var: node

    # - name: Delete All Firewall Rules
    #   gcp_compute_firewall:
    #     name: "{{ rule.name | regex_replace('_','-') }}"
    #     network: "{{ gcp_vpc }}"
    #     project: "{{ project }}"
    #     state: absent
    #   loop: "{{ fw_rules }}"
    #   loop_control:
    #     loop_var: rule
    #   tags: gcp_fw_rules
    
    - name: Check Cloud Nats Exists
      ansible.builtin.command: gcloud compute routers nats list --router={{ router_name }} --region=asia-southeast2
      register: cloud_nat
      ignore_errors: true

    - name: Delete Cloud NAT
      ansible.builtin.command: gcloud compute routers nats delete {{ cloud_nat_name }} --router {{ router_name }} --region asia-southeast2
      when: cloud_nat is not failed and cloud_nat.stdout.find('{{ cloud_nat_name }}') != -1
    
    # - name: Delete Cloud Router
    #   gcp_compute_router:
    #     name: "{{ router_name }}"
    #     network: "{{ gcp_vpc }}"
    #     region: "asia-southeast2"
    #     auth_kind: "{{ auth_kind }}"
    #     project: "{{ project }}"
    #     service_account_file: "{{ service_account_file }}"
    #     state: absent

    # - name: Delete GCP Subnets
    #   gcp_compute_subnetwork:
    #     name: "{{ subnet.name }}"
    #     ip_cidr_range: "{{ subnet.cidr }}"
    #     network: "{{ gcp_vpc }}"
    #     region: "{{ subnet.region }}"
    #     project: "{{ project }}"
    #     state: absent
    #   loop: "{{ subnets }}"
    #   loop_control:
    #     loop_var: subnet
      
    # - name: Delete GCP VPC
    #   gcp_compute_network:
    #     name: "{{ vpc_name | regex_replace('_','-') }}"
    #     project: "{{ project }}"
    #     state: absent    

  handlers:
    - name: Clean tmp Decrypted Files
      file:
        path: "{{ service_account_file }}"
        state: absent