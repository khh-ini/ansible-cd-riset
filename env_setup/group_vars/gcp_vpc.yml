---
vpc_name: pa-ansible-cd
router_name: pac-router
cloud_nat_name: pac-nat

subnets:
  - name: pac-subnet
    cidr: 10.1.1.0/24
    region: asia-southeast2

fw_rules:
  - name: allow_internet_to_pac-subnet
    type: allow
    direction: ingress
    priority: 10
    src: 0.0.0.0/0
    apply_to: pac-subnet
    protocol: tcp
    port: 80,443,8080
    state: present

  - name: allow_ssh_to_pac-subnet
    type: allow
    direction: ingress
    src: 0.0.0.0/0
    apply_to: pac-subnet
    protocol: tcp
    port: 22
    state: present

compute_node_flavor: n1-standard-1
compute_node_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-minimal-2004-lts
compute_node_image_size: 10

compute_nodes: 
  # - name: prod-server-1
  #   ip: 10.1.1.31
  #   network: pac-subnet
  #   has_internet: no
  #   startup_script: | 
  #     #! /bin/bash
  #     apt update
  #     apt -y install iputils-ping docker.io vim
  #     echo "10.1.1.31 prod-server-1" >> /etc/hosts
  #     echo "10.1.1.32 prod-server-2" >> /etc/hosts
  #     echo "10.1.1.20 db-server" >> /etc/hosts
  #     echo "10.1.1.10 lb-server" >> /etc/hosts
  #     echo "10.1.1.253 dev-server" >> /etc/hosts
  #   zone: asia-southeast2-a
  
  # - name: prod-server-2
  #   ip: 10.1.1.32
  #   network: pac-subnet
  #   has_internet: no
  #   startup_script: | 
  #     #! /bin/bash
  #     apt update
  #     apt -y install iputils-ping docker.io vim
  #     echo "10.1.1.31 prod-server-1" >> /etc/hosts
  #     echo "10.1.1.32 prod-server-2" >> /etc/hosts
  #     echo "10.1.1.20 db-server" >> /etc/hosts
  #     echo "10.1.1.10 lb-server" >> /etc/hosts
  #     echo "10.1.1.253 dev-server" >> /etc/hosts
  #   zone: asia-southeast2-a

  # - name: db-server
  #   ip: 10.1.1.20
  #   network: pac-subnet
  #   has_internet: no
  #   startup_script: | 
  #     #! /bin/bash
  #     apt update
  #     apt -y install iputils-ping docker.io vim
  #     echo "10.1.1.31 prod-server-1" >> /etc/hosts
  #     echo "10.1.1.32 prod-server-2" >> /etc/hosts
  #     echo "10.1.1.20 db-server" >> /etc/hosts
  #     echo "10.1.1.10 lb-server" >> /etc/hosts
  #     echo "10.1.1.253 dev-server" >> /etc/hosts
  #   zone: asia-southeast2-a

  - name: dev-server
    ip: 10.1.1.253
    network: pac-subnet
    has_internet: no
    startup_script: | 
      #! /bin/bash
      curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee \
        /usr/share/keyrings/jenkins-keyring.asc > /dev/null
      echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
        https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
        /etc/apt/sources.list.d/jenkins.list > /dev/null
      add-apt-repository --yes --update ppa:ansible/ansible
      apt update
      apt -y install iputils-ping docker.io vim python3 software-properties-common jenkins ansible openjdk-11-jre
      echo "10.1.1.31 prod-server-1" >> /etc/hosts
      echo "10.1.1.32 prod-server-2" >> /etc/hosts
      echo "10.1.1.20 db-server" >> /etc/hosts
      echo "10.1.1.10 lb-server" >> /etc/hosts
      echo "10.1.1.253 dev-server" >> /etc/hosts
      systemctl enable jenkins
      systemctl start jenkins
    zone: asia-southeast2-a

  - name: lb-server
    network: pac-subnet
    ip: 10.1.1.10
    has_internet: yes
    ip_forwarding: yes
    startup_script: | 
      #! /bin/bash
      apt update
      apt -y install iputils-ping haproxy vim
      echo "10.1.1.31 prod-server-1" >> /etc/hosts
      echo "10.1.1.32 prod-server-2" >> /etc/hosts
      echo "10.1.1.20 db-server" >> /etc/hosts
      echo "10.1.1.10 lb-server" >> /etc/hosts
      echo "10.1.1.253 dev-server" >> /etc/hosts
      cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.backup
      cat <<EOF >> /etc/haproxy/haproxy.cfg

      frontend dev_front
          bind *:8080
          mode http
          default_backend dev_back

      backend dev_back
          mode http
          balance roundrobin
          option forwardfor
          http-request set-header X-Forwarded-Port %[dst_port]
          http-request add-header X-Forwarded-Proto https if { ssl_fc }
          option httpchk HEAD / HTTP/1.1rnHost:localhost
          server dev-server 10.1.1.253:8080

      frontend prod_front
          bind *:80
          mode http
          default_backend prod_back

      backend prod_back
          mode http
          balance roundrobin
          option forwardfor
          http-request set-header X-Forwarded-Port %[dst_port]
          http-request add-header X-Forwarded-Proto https if { ssl_fc }
          option httpchk HEAD / HTTP/1.1rnHost:localhost
          server prod-server-1 10.1.1.31:80
          server prod-server-2 10.1.1.32:80

      listen stats
          bind *:1234
          stats enable
          stats hide-version
          stats refresh 30s
          stats show-node
          stats auth username:password
          stats uri /stats
      EOF

    zone: asia-southeast2-a